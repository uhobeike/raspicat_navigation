<?xml version="1.0"?>
<launch>
  <!-- Arguments -->
  <arg name="urg_usb"               default="false"/>
  <arg name="urg_ether"             default="true"/>
  <arg name="imu_serial_port"       default="/dev/ttyACM1"/>
  <arg name="urg_serial_port"       default="/dev/ttyACM0"/>
  <arg name="urg_ip_address"        default="172.16.0.10"/>

  <arg name="waypoint_navigation"   default="true"/>
  <arg name="usens_conv"            default="true"/>
  <arg name="speak"                 default="true"/>
  <arg name="move_forward_only"     default="false"/>
  <arg name="mcl_map_file"          default="$(find raspicat_navigation)/config/maps/tsudanuma/map_tsudanuma.yaml"/>
  <arg if="$(arg waypoint_navigation)"      name="move_base_map_file"    default="$(find raspicat_navigation)/config/maps/for_move_base/map_tsudanuma.yaml"/>
  <arg unless="$(arg waypoint_navigation)"  name="move_base_map_file"    default="$(arg mcl_map_file)"/>
  <arg name="model"                 default="$(find raspicat_navigation)/config/urdf/raspicat.urdf.xacro"/>
  <arg if="$(arg waypoint_navigation)"      name="csv_file"              default="$(find raspicat_navigation)/config/csv/waypoint_tsudanuma.csv"/>

  <arg name="mcl_init_pose_x" default="0.0"/>
  <arg name="mcl_init_pose_y" default="0.0"/>
  <arg name="mcl_init_pose_a" default="0.0"/>

  <!-- Prameters -->
  <param name="robot_description" command="$(find xacro)/xacro --inorder $(arg model)"/>

  <!-- Robot model import -->
  <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
    <param name="publish_frequency" type="double" value="50.0"/>
  </node>

  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher"/>

  <!-- Raspicat nodes -->
  <include file="$(find raspicat)/launch/raspicat.launch"/>

  <!-- Motor on -->
  <node pkg="raspicat_navigation" name="motor_start" type="motor_start.py" required="true" output="screen"/>

  <!-- Urg node -->
  <node pkg="urg_node" name="urg_node" type="urg_node" required="true">
    <param name="frame_id" value="urg_lrf_link"/>
    <param if="$(arg urg_ether)" name="ip_address" value="$(arg urg_ip_address)"/>
    <param if="$(arg urg_usb)"   name="serial_port" value="$(arg urg_serial_port)"/>
  </node>

  <!-- Map server -->
  <node pkg="map_server" name="mcl_map_server" type="map_server" args="$(arg mcl_map_file)"/>

  <node pkg="map_server" name="move_base_map_server" type="map_server" args="$(arg move_base_map_file)">
    <remap from="map"        to="/move_base_map"/>
    <remap from="static_map" to="/move_base_static_map"/>
  </node>
  
  <!-- Amcl -->
  <include file="$(find raspicat_navigation)/launch/amcl.launch">
    <arg name="initial_pose_x" value="$(arg mcl_init_pose_x)"/>
    <arg name="initial_pose_y" value="$(arg mcl_init_pose_y)"/>
    <arg name="initial_pose_a" value="$(arg mcl_init_pose_a)"/>
  </include>

  <!-- Move_base -->
  <include file="$(find raspicat_navigation)/launch/move_base.launch">
    <arg name="move_forward_only" value="$(arg move_forward_only)"/>
    <arg name="waypoint_nav"      value="$(arg waypoint_navigation)"/>
  </include>

  <group if="$(arg waypoint_navigation)"> 
    <!-- Waypoint Nav -->
    <node pkg="raspicat_navigation" name="WaypointNav_node" type="WaypointNav_node" args="$(arg csv_file)" output="screen"/>

    <include if="$(arg usens_conv)" file="$(find analog_distance_sensor_to_laserscan)/launch/analog_distance_sensor_to_laserscan.launch">
      <arg name="nodelet"                 value="true"/>
      <arg name="usensor_max_threshold"   value="200"/>
      <arg name="usensor_min_threshold"   value="30"/>
    </include>

    <!-- Raspicat speak -->
    <node if="$(arg speak)" pkg="raspicat_speak" type="raspicat_speak_node" name="raspicat_speak_node" 
          clear_params="true" respawn="true" output="screen">
      <rosparam command="load" file="$(find raspicat_navigation)/config/raspicat_speak/speak_list.yaml"/>
      <rosparam command="load" file="$(find raspicat_navigation)/config/raspicat_speak/voice_config.yaml"/>
    </node>
  </group>
</launch>